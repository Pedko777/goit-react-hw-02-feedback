{"version":3,"sources":["components/section/Section.js","components/notification/Notfication.js","components/statistics/Statistics.js","components/feedbackOptions/FeedbackOptions.js","components/feedback/Feedback.js","App.js","index.js","components/feedback/feedback.module.css"],"names":["Section","name","children","Notification","message","statistic","styles","Statistics","good","neutral","bad","total","percentage","className","FeedbackOptions","options","onClick","type","Feedback","App","state","stateIncrement","res","setState","prev","sumAllState","Object","values","reduce","acc","currentValue","countPercentage","Math","round","this","percentPositiveFeedback","isNaN","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wPAUeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACd,iCACE,4BAAKD,GACJC,I,OCFUC,EAFM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAAe,2BAAIA,ICGhCC,E,OAAcC,EAAdD,UAkBOE,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,kBAAC,EAAD,CAASX,KAAK,aACXU,EAAQ,EACP,yBAAKE,UAAWR,GACd,uCAAaG,GACb,0CAAgBC,GAChB,sCAAYC,GACZ,wCAAcC,EAAd,KACA,oDAA0BC,EAA1B,MAGF,kBAAC,EAAD,CAAcR,QAAS,wBCAdU,EAhBS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,oCACE,4BAAQC,QAAS,kBAAMD,EAAQ,SAASE,KAAK,UAA7C,QAGA,4BAAQD,QAAS,kBAAMD,EAAQ,YAAYE,KAAK,UAAhD,WAGA,4BAAQD,QAAS,kBAAMD,EAAQ,QAAQE,KAAK,UAA5C,SCDSC,EANE,SAAC,GAAD,IAAEH,EAAF,EAAEA,QAAF,OACf,kBAAC,EAAD,CAASd,KAAK,yBACZ,kBAAC,EAAD,CAAiBc,QAASA,MCiCfI,E,4MAjCbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,eAAiB,SAAAC,GAAG,OAAI,EAAKC,UAAS,SAAAC,GAAI,sBAAQF,EAAME,EAAKF,GAAO,O,EACpEG,YAAc,kBACZC,OAAOC,OAAO,EAAKP,OAAOQ,QACxB,SAACC,EAAKC,GAAN,OAAuBD,EAAMC,IAC7B,I,EAEJC,gBAAkB,SAACX,EAAOT,GAAR,OAAkBqB,KAAKC,MAAO,CAACb,GAAST,EAAS,M,uDACzD,IAAD,SACwBuB,KAAKd,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQuB,KAAKT,cACbU,EAA0B,SAACf,EAAOT,GAAR,OAC9B,EAAKoB,gBAAgBX,EAAOT,IAC9B,OACE,oCACE,kBAAC,EAAD,CAAUI,QAASmB,KAAKb,iBACxB,kBAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYwB,MAAMD,EAAwB3B,EAAMG,IAAU,IAA9C,UAAuDwB,EAAwB3B,EAAMG,W,GA3BxF0B,aCCnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.db59d463.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Section = ({ name, children }) => (\r\n  <section >\r\n    <h2>{name}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;","import React from 'react'\r\n\r\nconst Notification = ({message}) => <p>{message}</p>;\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Section from '../section/Section';\r\nimport styles from '../feedback/feedback.module.css';\r\nimport Notification from '../notification/Notfication';\r\n\r\nconst { statistic } = styles;\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\r\n  <Section name=\"Statistic\">\r\n    {total > 0 ? (\r\n      <div className={statistic}>\r\n        <span>Good: {good}</span>\r\n        <span>Neutral: {neutral}</span>\r\n        <span>Bad: {bad}</span>\r\n        <span>Total: {total} </span>\r\n        <span>Positive feedback: {percentage}%</span>\r\n      </div>\r\n    ) : (\r\n      <Notification message={'No feedback given'} />\r\n    )}\r\n  </Section>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ options }) => {\r\n  return (\r\n    <>\r\n      <button onClick={() => options(\"good\")} type=\"button\">\r\n        good\r\n      </button>\r\n      <button onClick={() => options(\"neutral\")} type=\"button\">\r\n        neutral\r\n      </button>\r\n      <button onClick={() => options(\"bad\")} type=\"button\">\r\n        bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport Section from '../section/Section';\r\nimport FeedbackOptions from '../feedbackOptions/FeedbackOptions';\r\n\r\nconst Feedback = ({options}) => (\r\n  <Section name=\"Please leave feedback\">\r\n    <FeedbackOptions options={options} />\r\n  </Section>\r\n);\r\n\r\nexport default Feedback;","import React, { Component } from 'react';\nimport Statistics from './components/statistics/Statistics';\nimport Feedback from './components/feedback/Feedback';\n\n\n class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  stateIncrement = res => this.setState(prev => ({ [res]: prev[res] + 1 }));\n  sumAllState = () =>\n    Object.values(this.state).reduce(\n      (acc, currentValue) => acc + currentValue,\n      0,\n    );\n  countPercentage = (state, total) => Math.round(([state] / total) * 100);\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.sumAllState();\n    const percentPositiveFeedback = (state, total) =>\n      this.countPercentage(state, total);\n    return (\n      <>\n        <Feedback options={this.stateIncrement} />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          percentage={isNaN(percentPositiveFeedback(good, total)) ? \"0\" : `${percentPositiveFeedback(good, total)}`}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"feedback_statistic__295Iu\"};"],"sourceRoot":""}